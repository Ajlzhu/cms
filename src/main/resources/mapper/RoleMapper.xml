<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.li.mapper.RoleMapper">
    <resultMap id="roleUserPermissionMap" type="com.li.bean.Role">
        <id column="role_id" property="roleId"/>
        <result column="role_name" property="roleName"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <!--创建人-->
        <association property="creator" javaType="com.li.bean.User">
            <id column="create_by" property="userId"/>
            <result column="creator" property="nickname"/>
        </association>
        <!--修改人-->
        <association property="modifier" javaType="com.li.bean.User">
            <id column="update_by" property="userId"/>
            <result column="modifier" property="nickname"/>
        </association>
        <!--用户-->
        <collection property="userList"
                    select="com.li.mapper.UserMapper.getUserListByRoleId" column="user_id">
        </collection>
        <!--权限-->
        <collection property="permissionList"
                    select="com.li.mapper.PermissionMapper.getPermissionByRoleId" column="{roleId=role_id,type=ptype}">
        </collection>

    </resultMap>
    <sql id="selectRole">
        SELECT r.role_id,r.role_name,r.create_by,r.create_time,r.update_by,
        r.update_time,c.nickname creator,m.nickname modifier,null ptype
        FROM role r
	    LEFT JOIN user c ON r.create_by = c.user_id
        LEFT JOIN user m ON r.update_by = m.user_id
    </sql>
    <insert id="saveRole" useGeneratedKeys="true" keyProperty="roleId">
        insert into role values(#{roleId},#{roleName},#{creator.userId},#{createTime})
    </insert>

    <update id="updateRoleById">
        update role
        <set>
            <if test="roleName != null">role_name = #{roleName},</if>
            <if test="modifier != null">
                <if test="modifier.userId != null">update_by = #{modifier.userId},</if>
            </if>
            <if test="updateTime != null">update_time = #{updateTime}</if>
        </set>
        where role_id = #{roleId}
    </update>

    <delete id="deleteRoleById">
        delete from role where role_id = #{roleId}
    </delete>

    <delete id="deleteRoleByIds">
        delete from role where role_id
        <foreach collection="ids" open="in(" item="id" separator="," close=")">
            #{id}
        </foreach>

    </delete>

    <select id="getRoleListByUserId" resultType="com.li.bean.Role">
        SELECT
            r.role_id,
            r.role_name
        FROM
            role r
        LEFT JOIN user_role ur on r.role_id = ur.role_id
        WHERE ur.user_id = #{userId}
    </select>
    <select id="getRoleListByPermissionId" resultType="com.li.bean.Role">
        SELECT
            r.role_id,
            r.role_name
        FROM
            role r
        LEFT JOIN role_permission rp on r.role_id = rp.permission_id
        WHERE rp.permission_id = #{permissionId}
    </select>

    <select id="getRoleListByCondition" resultMap="roleUserPermissionMap">
        <include refid="selectRole"/>
        <where>
            <if test="roleId != null"> r.role_id = #{roleId}</if>
            <if test="roleName != null and roleName != ''"> and r.role_name = #{roleName}</if>
        </where>
        order by r.role_id
    </select>
    <select id="getRoleListByCondition_COUNT" resultType="Long">
        select count(*) from role
        <where>
            <if test="roleName != null and roleName != ''"> role_name = #{roleName}</if>
        </where>
    </select>
</mapper>
